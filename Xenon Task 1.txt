General instructions
 1. The approach of solving the Problem solely depends on the Candidate
 2. Make sure to have Draw.io diagrams for the workflowns and application architecture
 3. Every configuration, code written should be pushed on git (Private Repo)
 4. Your are not permitted to share the doc with anyone, even with your colleagues
 Scenario There is a customer who came to you with a problem to have a custom linux
 command for his operations. Your task is to understand the problem and create a linux
 command via bash script as per the instructions.
 Command name - internsctl
 Command version- v0.1.0
 Section A
 1.  I want a manual page of command so that I can see the full documentation of the command.
 For example if you execute the command
 man ls
 as output we get the doc and usage guidelines. Similarly if I execute man internsctl I want
 to see the manual of my command.
 2. Each linux command has an option--help which helps the end user to understand the use
 cases via examples. Similarly if I execute internsctl--help it should provide me the
 necessary help
 3. I want to see version of my command by executing
 internsctl --version
Solution : 
Section A:
#!/bin/bash

# internsctl - Custom Linux command for managing interns

VERSION="v0.1.0"

function show_help {
    echo "Usage: internsctl [OPTIONS] COMMAND [ARGS]..."
    echo "  internsctl is a command-line tool for managing interns."
    echo
    echo "Options:"
    echo "  --help     Display this help message."
    echo "  --version  Display the command version."
    echo
    echo "Commands:"
    echo "  hire NAME  Hire a new intern with the given name."
    echo "  fire NAME  Fire an intern with the given name."
}

function show_version {
    echo "internsctl $VERSION"
}

case "$1" in
    --help)
        show_help
        ;;
    --version)
        show_version
        ;;
    hire)
        if [ -z "$2" ]; then
            echo "Error: Please provide a name for the new intern."
            exit 1
        fi
        echo "Hired intern: $2"
        ;;
    fire)
        if [ -z "$2" ]; then
            echo "Error: Please provide the name of the intern to be fired."
            exit 1
        fi
        echo "Fired intern: $2"
        ;;
    *)
        echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
        exit 1
        ;;
esac
Now, make the script executable:
chmod +x internsctl
To address the
manual page request, we need to create a manual page file. Save the following content in a file named internsctl.1:
.TH INTERNSCTL 1 "January 2023" "Version 0.1.0" "Internsctl Manual"

.SH NAME
internsctl \- Manage interns

.SH SYNOPSIS
.B internsctl
[\fIOPTIONS\fP] \fIcommand\fP [\fIARGS\fP]...

.SH DESCRIPTION
\fBinternsctl\fP is a command-line tool for managing interns.

.SH OPTIONS
\fB\-\-help\fP
Display this help message.

\fB\-\-version\fP
Display the command version.

.SH COMMANDS
.TP
\fBhire NAME\fP
Hire a new intern with the given name.

.TP
\fBfire NAME\fP
Fire an intern with the given name.

.SH EXAMPLES
\fBinternsctl hire John\fP
Hire a new intern named John.

.SH SEE ALSO
.BR internsctl (1)
Now, follow the steps from the previous response to generate and view the manual page:
sudo mv internsctl /usr/local/bin/  # Move the script to a directory in the PATH
sudo mv internsctl.1 /usr/share/man/man1/  # Move the manual page to the man directory
sudo mandb  # Update the manual page index
After these steps, you can use the following commands:
man internsctl   # View the manual page
internsctl --help   # Display command help
internsctl --version   # Display command version


// Section B
 I want to execute the following command for 
Part1  | Level Easy
 I want to get cpu information of my server through the following command:
$ internsctl cpu getinfo
 Expected Output 
I want similar output as we get from lscpu command--
I want to get memory information of my server through the following command:
 $ internsctl memory getinfo
 Expected Output
 I want similar output as we get from free command
solution:
#!/bin/bash

# internsctl - Custom Linux command for managing interns

VERSION="v0.1.0"

function show_version {
    echo "internsctl $VERSION"
}

function get_cpu_info {
    lscpu
}

function get_memory_info {
    free -h
}

case "$1" in
    --version)
        show_version
        ;;
    cpu)
        case "$2" in
            getinfo)
                get_cpu_info
                ;;
            *)
                echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
                exit 1
                ;;
        esac
        ;;
    memory)
        case "$2" in
            getinfo)
                get_memory_info
                ;;
            *)
                echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
        exit 1
        ;;
esac

 Part2 | Level Intermediate
 I want to create a new user on my server through the following command:
 $ internsctl user create <username>
 Note- above command should create user who can login to linux system  and access his home
 directory--
I want to list all the regular users present on my server through the following command:
 $ internsctl user list--
If  want to list all the users with sudo permissions on my server through the following command:
 $ internsctl user list --sudo-only
Solution:
#!/bin/bash

# internsctl - Custom Linux command for managing interns

VERSION="v0.1.0"

function show_version {
    echo "internsctl $VERSION"
}

function create_user {
    if [ -z "$2" ]; then
        echo "Error: Please provide a username."
        exit 1
    fi
    
    # Create a user with home directory
    sudo useradd -m "$2"
    
    echo "User '$2' created successfully."
}

function list_users {
    if [ "$2" == "--sudo-only" ]; then
        # List users with sudo permissions
        getent passwd {1000..60000} | cut -d: -f1 | xargs -I{} sudo -U {} -l 2>/dev/null | grep -Po '^User \K.*$'
    else
        # List all regular users
        getent passwd {1000..60000} | cut -d: -f1
    fi
}

case "$1" in
    --version)
        show_version
        ;;
    user)
        case "$2" in
            create)
                create_user "$@"
                ;;
            list)
                list_users "$@"
                ;;
            *)
                echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
        exit 1
        ;;
esac

 Part3 | Advanced Level
 By executing below command I want to get some information about a file
 $ internsctl file getinfo <file-name>
 Expected Output [make sure to have the output in following format only]
 xenonstack@xsd-034:~$ internsctl file getinfo hello.txt
 File:
 hellot.txt
 Access:
 Size(B):
 Owner:-rw-r--r--
 5448
 xenonstack
Modify:    
2020-10-07 20:34:44.616123431 +0530
 In case I want only specific information then I must have a provision to use options
 $ internsctl file getinfo [options] <file-name>--size, -s  to print size--permissions, -p print file permissions--owner, o print file owner--last-modified, m
 Expected Output with options
 If I want to obtain the size of the specified file only, I should be able to use the following
 command:
 xenonstack@xsd-034:~$ internsctl file getinfo --size hello.txt
 5448
 If I want to obtain the permissions of the specified file only, I should be able to use the following
 command:
 xenonstack@xsd-034:~$ internsctl file getinfo --permissions hello.txt-rw-r--r--
 If I want to obtain the owner of the specified file only, I should be able to use the following
 command:
 xenonstack@xsd-034:~$ internsctl file getinfo --owner hello.txt
 xenonstack
 If I want to obtain the last modified time of the specified file only, I should be able to use the
 following command:
 xenonstack@xsd-034:~$ internsctl file getinfo --last-modified hello.txt
 2020-10-07 20:34:44.616123431 +0530
Solution:
#!/bin/bash

# internsctl - Custom Linux command for managing interns

VERSION="v0.1.0"

function show_version {
    echo "internsctl $VERSION"
}

function get_file_info {
    if [ -z "$2" ]; then
        echo "Error: Please provide a filename."
        exit 1
    fi
    
    file_name="$2"
    
    # Check if the file exists
    if [ ! -e "$file_name" ]; then
        echo "Error: File '$file_name' not found."
        exit 1
    fi
    
    # Get file information
    file_access=$(stat -c %A "$file_name")
    file_size=$(stat -c %s "$file_name")
    file_owner=$(stat -c %U "$file_name")
    
    # Display the information
    echo "File:"
    echo "$file_name"
    echo "Access:"
    echo "Size(B):"
    echo "$file_size"
    echo "Owner:$file_access"
    echo "$file_owner"
}

case "$1" in
    --version)
        show_version
        ;;
    file)
        case "$2" in
            getinfo)
                get_file_info "$@"
                ;;
            *)
                echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Error: Unknown command or option. Use 'internsctl --help' for usage information."
        exit 1
        ;;
esac

